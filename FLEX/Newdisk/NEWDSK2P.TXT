*********************************************************
*                                                       *
* Double sided newdisk utility for Microbox II          *
* Taken from supplied single sided version              *
* and original TSC skeletal newdisk                     *
*                                                       *
* Last update - 18th September 1984                     *
* Authors - TSC , Micro concepts and David Boreham      *
*                                                       *
* Adapted for Elektor EC-6809 by Ph. Roehr 11/2023      *
*                                                       *
*********************************************************


SMAXS0  EQU     10      SD SIDE 0 MAX SECTOR
SMAXS1  EQU     20      SD SIDE 1 MAX SECTOR
DMAXS0  EQU     18      DD SIDE 0 MAX SECTOR
DMAXS1  EQU     36      DD SIDE 1 MAX SECTOR

TKSZ    EQU     3050    THIS VALUE IS FOR 5'1/4 BUT WORKS FOR 3'1/2 ON THE MICROBOX
*TKSZ    EQU     3123    THIS VALUE IS FOR 3'1/2

FIRST   EQU     $0101   FIRST USER SECTOR
SMAX0   EQU     10      SIDE 0 MAX SECTORS DEFAULT TO 10
WORK    EQU     $0800

* STANDARD PRE-NAMED LABEL EQUATES

SYSMTH  EQU     $CC0E
SYSYR   EQU     $CC10
WARMS   EQU     $CD03
GETCHR  EQU     $CD15
PUTCHR  EQU     $CD18
INBUFF  EQU     $CD1B
PSTRNG  EQU     $CD1E
PCRLF   EQU     $CD24
GETFIL  EQU     $CD2D
OUTDEC  EQU     $CD39
OUTHEX  EQU     $CD3C
GETHEX  EQU     $CD42
OUTADR  EQU     $CD45
INDEC   EQU     $CD48
FMSCLS  EQU     $D403
FMS     EQU     $D406

* ASCII CODE EQUATES

EOT     EQU     $04
BEL     EQU     $07

* EXTERNAL LABEL EQUATES

DRVREG  EQU     $EC0C       DRIVE SELECT LATCH
COMREG  EQU     $EC04       FDC COMREG
DATREG  EQU     $EC07       FDC DATREG
DSKTAB  EQU     $DE80       EPROM DISK PARAM TABLE ADDRESS

TRACK   EQU     $0020
SECTOR  EQU     $0021
BADCNT  EQU     $0022
DRN     EQU     $0023
SIDE    EQU     $0024
DBSDF   EQU     $0025
DENSE   EQU     $0026
DNSITY  EQU     $0027
SECCNT  EQU     $002A
FSTAVL  EQU     $002C
LSTAVL  EQU     $002E
MAXS0   EQU     $0030
MAXS1   EQU     $0031
MAX     EQU     $0032
FKFCB   EQU     $0034
VOLNAM  EQU     $0038
VOLNUM  EQU     $0043
L0815   EQU     $0815       #WORK + $15 (+21) ?? INFO RECORD ??
L081E   EQU     $081E       #WORK + $1E (+30) SD POST INDEX $FF LIMIT
L083C   EQU     $083C       #WORK + $3C (+60) DD POST INDEX $4E LIMIT
SWKEND  EQU     WORK+TKSZ
DWKEND  EQU     SWKEND+TKSZ

DWRITE  EQU     $DE03
*REST    EQU     $DE09
DSEEK   EQU     $DE1B
DCHECK  EQU     $DE0F
DDRIVE  EQU     $DE0C

        ORG     $0033
        
TRACKS  FCB     40          DEFAULT TO 40 TRACKS

        ORG     $0100

NEWDISK BRA     FORM1       BEGIN       
        FCB     $02

OUTIN   JSR     PSTRNG      DISPLAY STRING
OUTIN2  JSR     GETCHR      GET RESPONSE
        ANDA    #$5F        UPPER CASE
        CMPA    #'Y         COMPARE TO Y SO Z IS SET IF YES
        RTS

FORM1   LDA     #SMAX0      INIT PARAM FOR SD
        STA     >MAXS0
        STA     >MAX
        LDA     #SMAXS1
        STA     >MAXS1
        JSR     GETHEX      GET DRIVE NUMBER FROM COMMAND LINE
        LBCS    EXIT        EXIT ON ERROR
        TFR     X,D 
        CMPD    #$0002      ENSURE 0 TO 2
        LBHI    EXIT        EXIT IF NOT
        LDX     #WORK
        STB     3,X
        STB     >DRN
        LDX     #SURES      ASK IF SURE
        BSR     OUTIN
        LBNE    EXIT        EXIT IF NOT
        LDX     #SCRDS      ASK IF SCRATCH DISK SURE
        JSR     PSTRNG
        LDX     #WORK+2     CLEAR BAD COUNT
        CLR     0,X
        CLRB
        JSR     OUTDEC      DISPLAY
        LDA     #$3F        QUESTION MARK
        JSR     PUTCHR      DISPLAY
        LDA     #$20        SPACE
        JSR     PUTCHR      DISPLAY
        BSR     OUTIN2      GET RESPONSE
        BNE     EXIT        EXIT IF SCRATCH NOT SURE
        CLR     >DBSDF
        LDX     #DBST       ASK DUAL SIDE
        BSR     OUTIN       GET RESPONSE
        BNE     FORM25      SKIP IF SS
        INC     >DBSDF      SET VALUE FOR DS
        LDA     #SMAXS1
        STA     >MAX
FORM25
        CLR     >DENSE      SET SD
        CLR     >DNSITY     SET SD
        LDX     #DDSTR      ASK DD
        BSR     OUTIN
        BNE     FORM30      SKIP IF SD
        INC     >DENSE      SET DD
FORM30  LDX     #DTSTR      ASK 80 TRACKS L061
        BSR     OUTIN
        BNE     FORM40      SKIP IF 40 TRACKS
        LDA     #$50        SET 80 TRACKS           
        STA     >TRACKS     SET TRACKS TO 80
FORM40  LDX     #MNSTR      ASK VOLUME NAME L016C
        JSR     PSTRNG
        JSR     INBUFF
        LDX     #FKFCB
        JSR     GETFIL
FORM27  LDX     #NUMSTR     ASK VOLUME NUMBER
        JSR     PSTRNG
        JSR     INBUFF
        JSR     INDEC
        BCS     FORM27
        STX     >VOLNUM
        JSR     PCRLF
        LDX     #WORK
        JSR     DDRIVE      SELECT DRIVE
        JSR     RESTOR      RESTORE DRIVE
        BEQ     FORMAT      NO SEEK ERROR AFTER RESTORE -> FORMAT
        LDX     #WPST       LOAD WRITE PROTECT MESSAGE
        BITB    #$40        TEST WRITE PROTECTED FLOPPY
        BNE     EXIT2       EXIT WITH WRITE PROTECT MESSAGE
        LDX     #WORK
        JSR     DCHECK      DRIVE READY CHECK
        BCC     FORMAT      DRIVE READY -> FORMAT

* EXIT ROUTINES

EXIT    LDX     #ABORTS
EXIT2   JSR     PSTRNG      
EXIT3   JSR     FMSCLS
        ANDCC   #$EF
        JMP     WARMS       EXIT

* MAIN FORMATTING LOOP

FORMAT  LDX     #INITRK     DISPLAY
        JSR     PSTRNG
        *
        ORCC    #$10        SET INTERRUPT BIT
        CLR     >TRACK      TRACK 0
FORM3   CLR     >SIDE       SIDE 0  
        CLR     >SECTOR     SECTOR 0
        BSR     TRKHD       GO PREPARE TRACK
FORM32  LDX     #WORK
        TST     >DNSITY     TEST DENSITY
        BEQ     FORM4       SKIP IF SD
        LDX     #WORK
FORM4   LBSR    DOSEC       GO DO SECTOR
        INC     >SECTOR     INC SECTOR
        LDA     >SECTOR
        TST     >SIDE       TEST SIDE 
        BNE     FORM45      BRANCH IF SIDE 1
        CMPA    >MAXS0      TEST SECTOR WITH MAX SIDE 0
        BRA     FORM46      
FORM45  CMPA    >MAXS1      TEST SECTOR WITH MAX SIDE 1
FORM46  BNE     FORM4       LOOP FOR NEXT SECTOR OR END LOOP
        LDA     >TRACK
        LDB     >SIDE       FAKE SECTOR NUMBER - OVER $12 FOR SIDE 1
        JSR     DSEEK       SEEK DRIVE TO TRACK
        JSR     WTTRK       WRITE TRACK
        TST     >DBSDF      TEST SINGLE SIDE DISK
        BEQ     FORM6       SKIP IF YES
        TST     >SIDE       TEST ACTUAL SIDE
        BNE     FORM6       SKIP IF SIDE 1
        LDA     >SIDE        
        EORA    #%00100000  COME HERE IF DS AND SIDE=0 SO NOW SIDE=$20 (>$12)
        STA     >SIDE       STORE NEW SIDE / FAKE SECTOR NUMBER
        BRA     FORM32      DO ALL AGAIN FOR SIDE 1
FORM6   INC     >TRACK      INC TRACK
        JSR     SWITCH      GO TO CHECK DENSITY AND CHANGE IF DD
        LDA     >TRACK      LOAD CURRENT TRACK
        CMPA    >TRACKS     COMPARE WITH MAX TRACK
        BNE     FORM3       LOOP FOR NEXT TRACK
        *
        LDX     #VRYTRK     VERIFY MESSAGE
        JSR     PSTRNG
        *
        LBRA    SETUP       END OF FORMATTING LOOP - GO TO VERIFY

*SET UP TRACK HEADER INFORMATION

TRKHD   LDX     #WORK       POINT TO BUFFER 
        TST     >DNSITY     TEST DENSITY
        BNE     TRHDD       SKIP IF DD
        LDB     #$FF        INIT WITH $FF
TRHDS1  STB     0,X+        
        CMPX    #SWKEND     UNTIL FMS END FOR SD
        BNE     TRHDS1
        LDX     #L081E
        CLRA                SET IN 0
        LDB     #6
        BRA     TRKHD1
TRHDD   LDB     #$4E        INIT WITH $4E
TRHDD1  STB     0,X+        L020F
        CMPX    #DWKEND     UNTIL END FOR DD
        BNE     TRHDD1
        LDX     #L083C
        CLRA                SET IN 0
        LDB     #$0C
        BSR     SET
        LDA     #$F6
        LDB     #3
TRKHD1  BSR     SET         L0222
        LDA     #$FC        SET INDEX MARK
        STA     0,X
        RTS

* FILL (B) BYTES OF MEMORY WITH (A) STARTING AT (X)

SET     STA     0,X+
        DECB
        BNE     SET
        RTS

* PROCESS SECTOR IN RAM

DOSEC   CLRA
        TST     >DNSITY     DOUBLE DENSITY ?
        BNE     DOSE1       SKIP IF SO
        LDB     #$06        CLEAR 6 BYTES
        BRA     DOSE2       DOSE2 JUMP
DOSE1   LDB     #$0C        CLEAR 12 BYTES L0238
        BSR     SET         
        LDA     #$F5        SET IN 3 $F5'S
        LDB     #$03
DOSE2   BSR     SET         L0240
        LDA     #$FE        ID ADRESS MARK
        STA     0,X+        
        LDA     >TRACK      GET TRACK NO
        STA     0,X+        
        LDB     >DNSITY     DOUBLE DENSITY ?
        BEQ     DOSE3       SKIP IF NOT
        LDB     >SIDE       GET SIDE INDICATOR
        ANDB    #$01        MAKE IT 0 OR 1
DOSE3   STB     0,X+        L0252
        LDB     >SECTOR     GET SECTOR NO
        LDY     #SSCMAP     POINT TO CORRECT MAP
        TST     >DNSITY     
        BEQ     DOSE4       
        LDY     #DSCMAP     
DOSE4   LDB     B,Y         GET ACTUAL SECTOR L0262
        STB     0,X+        
        CMPB    >MAX        END OF TRACK ?
        BNE     DOSE5       SKIP IF NOT
        INCA                BUMP TRACK NO
        CLRB                RESET SECTOR NO
        CMPA    >TRACKS     MAXTRK END OF DISK ?
        BNE     DOSE5       SKIP IF NOT
        CLRA                SET ZERO FORWARD LINK
        LDB     #$FF        
DOSE5   INCB                SECTOR NO L0273
        PSHS    A,B         SAVE FORWARD LINK
        LDA     #1          SECTOR LENTH = 256
        STA     0,X+        
        LDA     #$F7        SET CRC CODE
        STA     0,X+        
        TST     >DNSITY     DOUBLE DENSITY ?
        BNE     DOSE6       SKIP IF SO
        LEAX    11,X        LEAVE $FF'S
        CLRA                PUT IN 6 ZEROS
        LDB     #6          
        BRA     DOSE7
DOSE6   LEAX    22,X        LEAVE $4E'S L0289
        CLRA                PUT IN 12 ZEROS
        LDB     #$0C        
        BSR     SET         
        LDA     #$F5        PUT IN 3 $F5'S
        LDB     #3          
DOSE7   BSR     SET         L0295
        LDA     #$FB        DATA ADRESS MARK
        STA     0,X+        
        PULS    A,B         RESTORE FORWARD LINK
        STD     0,X++       PUT IN SECTOR BUFFER
        CLRA                
        LDB     #$FE        
        LBSR    SET         
        LDA     #$F7        SET CRC CODE
        STA     0,X+        
        LEAX    12,X        LEAVE GAP (10)
        TST     >DNSITY     DOUBLE DENSITY ?
        BEQ     DOSECA      SKIP IF NOT
        LEAX    12,X        DD NEEDS MORE GAPS
DOSECA  RTS


* DISK TESTING AND TABLE SETUP

* READ ALL SETORS FOR ERRORS

SETUP   LDB     >MAX
        LDA     >TRACKS
        DECA
        STD     >LSTAVL     SET LAST AVAIL.
        MUL                 FIND TOTAL SECTORS
        STD     >SECCNT     SAVE IT
        LDX     #FIRST      SET FIRST AVAIL
        STX     >FSTAVL     
        LDA     >DRN        
        STA     WORK+3      
        CLRA                CLEAR COUNTER
        STA     >BADCNT     
        STA     >TRACK      SET TRACK
        STA     >DNSITY     SINGLE DENSITY FOR TRACK 0
        INCA                
        STA     >SECTOR     SET SECTOR
        LDA     #SMAX0      RESET MAXIMUM
        STA     >MAXS0      SECTOR COUNTS
        LDA     #SMAXS1     
        STA     >MAXS1      
        TST     >DBSDF      DOUBLE SIDED ?
        BNE     SETUP1      SKIP IF SO
        LDA     #SMAX0      
SETUP1  STA     >MAX        MAXIMUM SECTORS
SETUP2  BSR     CHKSEC      GO CHECK SECTORS
        BNE     REMSEC      ERROR ?
        CLR     >BADCNT     CLEAR COUNTER
SETUP4  LDD     >TRACK      GET TRACK AND SECTOR
        BSR     FIXSEC      GET TO NEXT ADR
        LBEQ    DOTRK       SKIP IF FINISHED
        *
        PSHS    D,X         DISPLAY TRACK SECTOR
        LDA     #$08        BACKSPACE
        JSR     PUTCHR
        JSR     PUTCHR
        JSR     PUTCHR
        JSR     PUTCHR
        LDX     #TRACK
        JSR     OUTADR
        PULS    D,X
        *
        STD     >TRACK      SET TRACK AND SECTOR
        BRA     SETUP2      REPEAT
CHKSEC  LDX     #WORK       POINT TO FCB
        LDD     >TRACK      GET TRACK AND SECTOR
        STD     30,X        SET CURRENT TRACK AND SECTOR
        JMP     READSS      GO DO READ

* CHANGE TO DD IF REQUIRED

SWITCH  LDB     >DENSE      DOUBLE DENSITY DISK ?
        BEQ     SWICH2      SKIP IF NOT
        STB     >DNSITY     SET FLAG
        LDB     #DMAXS0     RESET SECTOR COUNTS
        STB     >MAXS0      
        LDB     #DMAXS1     
        STB     >MAXS1      
        TST     >DBSDF      TEST DOUBLE SIDED
        BNE     SWICH1      SKIP IF SO
        LDB     #DMAXS0
SWICH1  STB     >MAX
SWICH2  RTS

* SET TRACK AND SECTOR TO NEXT 

FIXSEC  CMPB    >MAX        END OF TRACK?
        BNE     FEXSE4      
        INCA                BUMP TRACK
        BSR     SWITCH      SWITCH TO DD IF NCSSRY
        CLRB                SECTOR NO.
FEXSE4  INCB                SECTOR NO.
        CMPA    >TRACKS     END OF DISK ?
        RTS

* REMOVE BAD SECTOR FROM FREE CHAIN

REMSEC  INC     >BADCNT     UPDATE COUNTER
        BEQ     REMSE1      COUNT OVERFLOW?
        LDA     >TRACK      GET TRACK
        BNE     REMSE2      TRACK 0 ?
        LDB     >SECTOR     GET SECTOR
        CMPB    #5          PAST DIRECTORY ?
        BHI     REMSE2       
REMSE1  LDX     #FATERS     REPORT FATAL ERROR L032D
        JMP     EXIT2       REPORT IT
REMSE2  LDX     #WORK       POINT TO FCB L0333
        LDD     >FSTAVL     GET OUTIN TRACK AND SECTOR
        CMPD    >TRACK      CHECK TRACK AND SECTOR
        BNE     REMSE3       
        BSR     FIXSEC      SET TO NEXT
        STD     >FSTAVL     GO DO NEXT
        BRA     REMSE7      SET NEW ADR
REMSE3  LDD     >TRACK      GET TRACK AND SECTOR L0343
        SUBB    >BADCNT     
        BEQ     REMSE4      UNDERFLOW ?
        BPL     REMSE5       
REMSE4  DECA                TRACK L034B
        LDB     >MAX        RESET SECTOR
REMSE5  STD     30,X        SET CURRENT AD L034E
        BSR     READSS      GO DO READ
        BNE     REMSE1      ERROR ?
        LDD     64,X        SET LINK ADR
        BSR     FIXSEC      POINT TO NEXT
        BNE     REMSE6      OVERFLOW ?
        LDD     30,X        GET CURRENT ADR
        STD     >LSTAVL     SET NEW LAST AVAIL
        CLRA                
        CLRB                
REMSE6  STD     64,X        SET NEW LINK L0363
        BSR     WRITSS      GO DO WRITE
        BNE     REMSE1      ERROR?
REMSE7  LDX     >SECCNT     GET SEC COUNT L036A
        LEAX    -1,X        DEC IT ONCE
        STX     >SECCNT     SAVE NEW COUNT
        LDX     #DABSS      REPORT BAD SECTOR
        JSR     PSTRNG      OUTPUT IT
        LDX     #TRACK      POINT TO ADDRESS
        JSR     OUTHEX      OUTPUT IT
        LDA     #$20        
        JSR     PUTCHR      
        LEAX    1,X         BUMP TO NEXT
        JSR     OUTHEX      
        JMP     SETUP4      CONTINUE

*READ A SECTOR

READSS  LDX     #WORK       POINT TO FCB
        LDA     #9          SET UP COMMAND
        STA     0,X         
        JMP     FMS         GO DO IT
                            
*WRITE A SECTOR             
                            
WRITSS  LDX     #WORK       POINT TO FCB
        LDA     #SMAX0      SETUP COMMAND
        STA     0,X         
        JSR     FMS         GO DO IT
        BEQ     READSS      ERRORS ?
        RTS

*SETUP SIR

DOTRK   CLR     >DNSITY     BACK TO SINGLE DENSITY
        LDX     #WORK       POINT TO SPACE
        CLR     30,X        SET TO DIS
        LDA     #3          SECTOR 3
        STA     31,X        
        BSR     READSS      READ IN SIR SECTOR
        BNE     DOTRK3      ERRORS ?
        LDX     #WORK       FIX POINTER
        CLR     64,X        CLEAR FORWARD LINK
        CLR     65,X        
        LDD     >FSTAVL     ADDR OF OUTIN FREE SECTOR
        STD     93,X        SET IN SIR (93)
        LDD     >LSTAVL     ADDR OF LAST FREE SECTOR
        STD     95,X        SET IN SIR
        LDD     >SECCNT     GET TOTAL SECTOR COUNT
        STD     97,X        PUT IN SIR
        LDA     >TRACKS     GET MAX TRACK NO
        DECA                
        LDB     >MAXS0      
        TST     >DBSDF      DOUBLE SIDED ?
        BEQ     DOTRK1
        LDB     >MAXS1      CHANGE FOR DOUBLE SIDED
DOTRK1  STD     102,X       SAVE MAX TRACK AND SECTOR L03D4
        LDD     >SYSMTH     MONTH INTO SIR
        STD     99,X        
        LDA     >SYSYR      SET YEAR INTO SIR
        STA     101,X       
        LDB     #$0D        
        LDY     #VOLNAM     POINT TO VOLUME NAME
        LDX     #WORK       
DOTRK2  LDA     0,Y+        COPY NAME TO SIR L03EC
        STA     80,X        
        LEAX    1,X         
        DECB                DEC THE COUNT
        BNE     DOTRK2       
        BSR     WRITSS      WRITE SIR BACK OUT
        BEQ     DIRINT      SKIP IF NO ERROR
DOTRK3  JMP     REMSE1      GO REPORT ERROR L03FA

* INITIALISE DIRECTORY

DIRINT  LDX     #WORK       SET POINTER TO FCB
        LDA     #SMAX0      GET MAX FOR TRACK 0
        TST     >DBSDF       SINGLE SIDED ?
        BEQ     DIRIN1      SKIP IF SO
        LDA     #SMAXS1     SET MAX FOR DS
DIRIN1  STA     31,X        SET UP L0408
        JSR     READSS      READ IN SECTOR
        BNE     DOTRK3      ERRORS ?
        LDX     #WORK       RESTORE POINTER
        CLR     64,X        CLEAR LINK
        CLR     65,X        
        JSR     WRITSS      WRITE BACK OUT
        BNE     DOTRK3      ERRORS ?
        LDX     #CMDADR
        CLRA                TRACK 0
        LDB     #1          SECTOR 1
        JSR     DWRITE      WRITE THE SECTOR
        BNE     DOTRK3      ERRORS ?
        
* SAVE BOOT IN TRACK 0 SECTOR 1

DOBOOT  LDX     #CMDADR
        CLRA                TRACK #0
        LDB     #$01        SECTOR #1
        JSR     DWRITE      WRITE THE SECTOR
        BNE     DOTRK3      ERRORS ?

*REPORT TOTAL SECTORS AND EXIT

        LDX     #WORK       SET UP AN FCB
        LDA     #$10        OPEN SIR FUNCTION
        STA     0,X         
        JSR     FMS         OPEN THE SIR
        BNE     DOTRK3      ERRORS ?
        LDA     #7          INFO RECORD FUNCTION
        STA     0,X         
        JSR     FMS         OUTIN INFO RECORD
        BNE     DOTRK3      REPORT FORMATTING COMPLETE
        LDX     #CMPLTE     REPORT FORMATTING COMPLETE
        JSR     PCRLF
        JSR     PSTRNG      OUTPUT IT
        LDX     #SECST      PRINT TOTAL SECTOR STRING
        JSR     PSTRNG      OUTPUT IT
        LDX     #L0815      TOTAL IS IN INFO RECORD
        CLRB                
        JSR     OUTDEC      PRINT NUMBER
        JMP     EXIT3       ALL DONE - GO TO EXIT

*SECTOR MAPS

SSCMAP  FCB     $01,$03,$05,$07,$09,$02,$04,$06
        FCB     $08,$0A
        FCB     11,13,15,17,19,12,14,16,18,20
DSCMAP  FCB     $01,$03,$05,$07,$09,$0B,$0D,$0F
        FCB     $11,$02,$04,$06,$08,$0A,$0C,$0E
        FCB     $10,$12
        FCB     19,21,23,25,27,29,31,33,35,20,22,24,26,28,30,32,34,36

* DISPLAYED MESSAGES

SURES   FCC     "Are you sure ? "
        FCB     EOT
WPST    FCC     "Disk is protected !"
        FCB     EOT
SCRDS   FCC     "Scratch disk in drive "
        FCB     EOT
FATERS  FCB     BEL,BEL,BEL
        FCC     "Fatal error "
        FCC     "--- "
        FCB     EOT
ABORTS  FCC     "Formatting aborted ! "
        FCB     EOT
DABSS   FCB     BEL
        FCC     "Bad sector at "
        FCB     EOT
CMPLTE  FCB     BEL
        FCC     "Formatting complete."
        FCB     EOT
SECST   FCC     "Total sectors = "
        FCB     EOT
DDSTR   FCC     "Double density disk ? "
        FCB     EOT
DBST    FCC     "Double sided disk ? "
        FCB     EOT
DTSTR   FCC     "80 tracks drive ? "
        FCB     EOT
MNSTR   FCC     "Volume name ? "
        FCB     EOT
NUMSTR  FCC     "Volume number ? "
        FCB     EOT
INITRK  FCC     "Write track :   "
        FCB     EOT
VRYTRK  FCC     "Verify track/sector :     "
        FCB     EOT

* TEMP1 = BUFFER END - CHANGE IF SD OR DD

TEMP1   RMB     2

* WRITE TRACK ROUTINE

WTTRK   PSHS    Y
        *
        LDA     #$08        DISPLAY TRACK - LOAD BACKSPACE
        JSR     PUTCHR
        JSR     PUTCHR
        LDX     #TRACK
        JSR     OUTHEX
        *
        LDB     >DRN
        LDA     #$EC
        EXG     A,DP        SET DP TO $EC
        PSHS    A           SAVE OLD DP
        LDX     #DSKTAB     LOAD DSKTAB ADDRESS
        LDA     04,X        LOAD LATCH RAM COPY FROM $DE80+4
        TST     >DNSITY     TEST SD DENSITY ?
        BEQ     WTTRK1      SKIP IF SD
        ANDA    #%10111111  CLEAR DENSITY BIT -> DD
        STA     <DRVREG     STORE TO LATCH
        STA     $04,X       STORE TO LATCH RAM COPY
        LEAX    $08,X       COMPUTE DRIVE DENSITY TABLE ADDRESS $DE80+8
        LDA     #$01      
        STA     B,X         MARK DRIVE AS DD IN DISK TABLE
*                           LDA    <DRVREG
        LDX     #DWKEND     END BUFFER ADDRESS DD
        STX     >TEMP1
        BRA     WTTRK2
WTTRK1  ORA     #%01000000  SET DENSITY BIT -> SD L056B
        STA     <DRVREG     STORE TO LATCH
        STA     $04,X       STORE TO LATCH RAM COPY
        LEAX    $08,X       COMPUTE DENSITY TABLE ADDRESS
        CLRA                
        STA     B,X         MARK DRIVE AS SD IN DISK TABLE
*                           LDA    <DRVREG    
        LDX     #SWKEND     END BUFFER ADDRESS SD
        STX     >TEMP1
WTTRK2  LDA     #$F4        LOAD WRITE TRACK COMMAND L0577
        STA     <COMREG
        JSR     DELAY
        LDB     #2          LOAD DRQ TEST VALUE
        LDX     #WORK
WTTRK3  LDA     0,X+        LOAD DATA FROM BUFFER
WTTRK5  BITB    <COMREG     TEST DRQ ? L0583
        BEQ     WTTRK5      WAIT MORE IF NOT
        STA     <DATREG     WRITE DATA
        CMPX    >TEMP1      COMPARE TO BUFFER END ADDRESS
        BNE     WTTRK3      LOOP - MORE DATA TO WRITE
WTTRK4  LDA     <COMREG     L0590
        BITA    #1          TEST BUSY   
        BNE     WTTRK4      WAIT MORE IF BUSY
        PULS    A
        EXG     A,DP        RESTORE DP
        PULS    Y,PC
 
* DRIVE RESTORE SUBROUTINE

RESTOR  PSHS    U,X,A
        LDA     #$EC
        EXG     A,DP
        PSHS    A           SAVE OLD DP
        LDA     >DRN        GET DRIVE NUMBER
        LDU     #DSKTAB
        BSR     WATFDC      CHECK FDC NOT BUSY 
        LDB     #$00        RESTORE COMMAND   
        ORB     $01,U       ADD STEP RATE
        STB     <COMREG     SEND TO FDC
        BSR     DELAY       WAIT
        BSR     WATFDC
        LDB     <COMREG
        CLR     $02,U       CLEAR CURRENT TRACK
        CLR     $03,U       CLEAR CURRENT SECTOR
        LEAX    $05,U
        CLR     A,X         CLEAR DRIVE TRACK MEMORY
        BITB    #$58        CHECK FOR WP, SEEK AND CRC ERROR
        PULS    A
        EXG     A,DP        RESTORE OLD DP
        PULS    U,X,A
        RTS
            
* WAIT FDC NOT BUSY

WATFDC  PSHS    B      
ZF164   LDB     <COMREG   
        ANDB    #$01   
        BNE     ZF164  
        PULS    PC,B   
      
* DELAY SUBROUTINE
        
DELAY   JSR     DEL1
DEL1    JSR     DEL0
DEL0    RTS
  
*********************************************        
               
* SINGLE OR DOUBLE DENSITY LOADER FOR EC-6809

* CONSTANTS

* EXTERNAL LABEL EQUATES

*COMREG  EQU     $EC04      FLOPPY CTLR
TRKREG  EQU     $EC05
SECREG  EQU     $EC06
*DATREG  EQU     $EC07
*DRVREG  EQU     $EC0C
STACK   EQU     $C0FF
SCTBUF  EQU     $C300

        ORG     $C100

CMDADR  BRA     CMDSTA

        FCB     $00,$00
        FCB     $00
FLXTRK  FCB     $1C         FILE START TRACK
        FCB     $01         FILE START SECTOR
DNS     FCB     $00         DENSITY FLAG
TADR    FCB     $C1,$00     TRANSFER ADDRESS
LADR1   FCB     $00,$00
        FCB     $00

CMDSTA  LDS     #STACK      SETUP STACK
        LDD     FLXTRK      GET TRANSFER ADDRESS
        STD     SCTBUF      SETUP STARTING TRK & SCT
        LDY     #SCTBUF+256
        
* MESSAGES

        LDX    #MLOAD
        SWI
        FCB     $03         PRINT
        SWI
        FCB     $06
        
* PERFORM ACTUAL BOOT LOAD

LOAD1   BSR     GETCH       GET A CHARACTER
        CMPA    #$02        DATA RECORD HEADER ?
        BEQ     LOAD2       SKIP IF SO
        CMPA    #$16        XFR ADDRESS HEADER?
        BNE     LOAD1       LOOP IF NEITHER
        BSR     GETCH       GET TRANSFER ADDRESS
        STA     TADR
        BSR     GETCH
        STA     TADR+1
        BRA     LOAD1       CONTINUE LOAD
        
LOAD2   BSR     GETCH       GET LOAD ADDRESS
        STA     LADR1
        BSR     GETCH
        STA     LADR1+1
        BSR     GETCH       GET BYTE COUNT
        TFR     A,B         PUT IN B
        TSTA
        BEQ     LOAD1       LOOP IF COUNT = 0
        LDX     LADR1       GET LOAD ADDRESS
LOAD3   PSHS    B,X
        BSR     GETCH       GET A DATA CHARACTER
        PULS    B,X
        STA     ,X+         PUT CHARACTER
        DECB                END OF DATA IN RECORD ?
        BNE     LOAD3       LOOP IF NOT
        BRA     LOAD1       GET ANOTHER RECORD

* GET CHARACTER ROUTINE

GETCH   CMPY    #SCTBUF+256 OUT OF DATA ?
        BNE     GETCH4      GO READ CHARACTER IF NOT
        LDX     #SCTBUF     POINT TO BUFFER
        LDD     0,X         GET FORWARD LINK
        BEQ     GO          IF ZERO, FILE IS LOADED
        BSR     READ        READ NEXT SECTOR
        BNE     CMDADR      START OVER IF ERROR
        LDY     #SCTBUF+4   POINT PAST LINK
GETCH4  LDA     ,Y+         ELSE GET A CHARACTER
        RTS

* FILE IS LOADED, JUMP TO IT

GO      JMP     [TADR]

* READ SINGLE SECTOR

READ    BSR     SEEK
        LDA     #$80        READ CMD
SUIT1   STA     COMREG      APPLY CMD
        LBSR    DEL28
        CLRB
        LDX     #SCTBUF     LOAD DESTINATION
READ3   LDA     COMREG
        BITA    #2          DRQ ?
        BNE     READ5
        BITA    #1          BUSY ?
        BNE     READ3       LOOP IF YES
        TFR     A,B
        BRA     READ6
        
READ5   LDA     DATREG
        STA     ,X+
        DECB
        BNE     READ3       NEXT BYTE
        BSR     WAIT
READ6   BITB    #$10        CHECK RNF
        BEQ     READ8       NO, JUMP
        COM     DNS         CHANGE DENSITY FOR NEXT READ
READ8   BITB    #$1C        CHECK FOR ERROR
        RTS
 
* ATTENTE FIN DE COMMANDE

WAIT    LDB     COMREG
        BITB    #1
        BNE     WAIT
        RTS

* SEEK

SEEK    PSHS    A
        TST     DNS
        BEQ     SIMPLE      SIMPLE DENSITY

* DOUBLE DENSITY

        LDA     #%00000001  DRIVE 0/DD
        CMPB    #18         SECTOR BY SIDE
        BLS     SEEK1       GO SIDE 0
        BRA     SEEK2       GO SIDE 1

* SIMPLE DENSITY 

SIMPLE  LDA     #%01000001  DRIVE 0/SD
        CMPB    #10         SECTOR BY SIDE 
        BLS     SEEK1       SIDE 0
SEEK2   ORA     #%00010000  FORCE SIDE 1
SEEK1   STB     SECREG
        STA     DRVREG      SETS DRIVE REG
        PULS    A
        CMPA    TRKREG      CHANGE TRACK ?
        BEQ     DEL28       NO, JUMP
        STA     DATREG      NEW TRACK
        BSR     DEL28
        LDA     #$1B
        STA     COMREG
        BSR     DEL28
        BSR     WAIT

* BOUCLE DELAI

DEL28   JSR     DEL14
DEL14   JSR     DEL
DEL     RTS

MLOAD FCC "Loading..."
      FCB $04

      ORG     $C200-4
      FCB     'F', 'L', 'E', 'X'

*      END     CMDADR

      END     NEWDISK

        
