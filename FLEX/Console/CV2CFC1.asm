
;* ELEKTOR EC6809 CONSOLE I/O DRIVER
;* WITH COMPACT FLASH MODS
;* 08/2024 PH. ROEHR

;* VARIOUS HARDWARE ADDRESSES

VIA     EQU     $EF80      ; CPU BOARD VIA ADDRESS
ACIA2SR EQU     $EEA0      ; I/O BOARD ACIA ADRRESS STATUS
ACIA2DR EQU     ACIASR+1   ; I/O BOARD ACIA ADRRESS DATA

;* VARIOUS FLEX ADRESSES

CHPR    EQU     $C700
VRYFLG  EQU     $D435
TTYPRM  EQU     $CC00
ASNPRM  EQU     $CC0B
VECTBL  EQU     $DFC2
MEMEND  EQU     $CC2B
DATCALL EQU     $CA02      ; ADDRESS OF JSR TO DATE PROMPT ROUTINE
FLEXDAT EQU     $CC0E
PCRLF   EQU     $CD24
PSTRNG  EQU     $CD1E
CFOK    EQU     $DEB0

;* IN CASE OF INTERRUPT THE ASSIST-09 EPROM
;* JUMP AT THE ADDRESS STORED AT

JSWIVE  EQU     VECTBL+6   ; FOR SWI3
JIRQVE  EQU     VECTBL+12  ; FOR IRQ

;* VARIOUS ADDRESSES INTO ESS540 ROM

WTLDVI  EQU     $F033      ; GET // DATA INPUT
INIT    EQU     $F036      ; INIT OF CPU VIA, ACIA AND CRTC
VIARDY  EQU     $F039      ; TEST // DATA READY
JMPADR  EQU     $F03C      ; PUT CHAR ON SCREEN
GDTVIE  EQU     $F03F      ; GET // DATA INPUT WITH ECHO
ERTS    EQU     $F01B      ; SIMPLE RTS

COLDS   EQU     $CD00      ; FLEX COLD ENTRY

        ORG     $D3E5

INCHN   FDB     JINCHN     ; INPUT CHARACTER WITHOUT ECHO
IHNDLR  FDB     JIHNDLR    ; IRQ INTERRUPT HANDLER
SWIVEC  FDB     JSWIVE     ; SWI3 VECTOR LOCATION
IRQVEC  FDB     JIRQVE     ; IRQ VECTOR LOCATION
TMOFF   FDB     JTMOFF     ; TIMER OFF ROUTINE
TMON    FDB     JTMON      ; TIMER ON ROUTINE
TMINT   FDB     JTMINT     ; TIMER INITIALIZATION
MONITR  FDB     JMONIT     ; MONITOR ENTRY ADDRESS
TINIT   FDB     JINIT      ; TERMINAL INITIALIZATION
STAT    FDB     JSTAT      ; CHECK TERMINAL STATUS
OUTCH   FDB     JOUTCH     ; OUTPUT CHARACTER
INCH    FDB     JINCH      ; INPUT CHARACTER WITH ECHO

        ORG     $D370

;* INITIALIZATION
JINIT   RTS

;* INPUT CHARACTER WITHOUT ECHO

JINCHN  JSR     WTLDVI
        BRA     BIT7

;* INPUT CHARACTER WITH ECHO

JINCH   JSR     GDTVIE
BIT7    ANDA    #$7F       ; CLEAR PARITY BIT
        RTS

;* OUTPUT CHAR

JOUTCH  PSHS    A,B,CC,DP,X,Y,U
        JSR     JMPADR
        PULS    A,B,CC,DP,X,Y,U,PC

;* CHECK VIA STATUS (IF CHAR IS WAITING Z=1, ELSE Z=0)

JSTAT   PSHS    A
        JSR     VIARDY
        PULS    A,PC

;* MONITOR ENTRY ADDRESS

JMONIT  SWI
        FCB    $08

;* TIMER INITIALIZATION

JTMINT  LDA    #$40
        STA    VIA+$0D     ; CLEAR INTERRUPT FLAG REGISTER
        LDD    #15000      ; 15 MS INTERRUPTS
        STB    VIA+$04     ; WRITE LOW ORDER LATCH
        STA    VIA+$05     ; WRITE HIGH ORDER COUNTER
        LDA    VIA+$0B
        ANDA   #%01111111  ; TIMER 1 NO OUTPUT ON PB7
        ORA    #%01000000  ; T1 CONTINUOUS INTERRUPT MODE
        STA    VIA+$0B     ; START T1
        RTS

;* TIMER ON ROUTINE

JTMON   LDA    #%11000000  ; $C0 ENABLE T1 IRQ
        BRA    STOVIA

;* TIMER OFF ROUTINE - STORE IN VIA

JTMOFF  LDA    #%01000000  ; $40 DISABLE T1 IRQ
STOVIA  STA    VIA+$0E
        RTS

;* IRQ INTERCEPTION

JIHNDLR PSHS   A           ; SAVES ON STACK
        LDA    VIA+$0D     ; GET VIA INTERRUPT FLAG REGISTER
        ASLA
        ASLA               ; GET BIT 6 INTO CARRY
        BCC    NSPOOL      ; BRANCH IF CARRY NOT SET
        LDA    #%01000000  ; $40
        STA    VIA+$0D     ; CLEAR INTERRUPT FLAG REGISTER BIT 6
        PULS   A           ; RESTORE STACK
        JMP    CHPR        ; JUMP TO SPOOLER
NSPOOL  PULS   A           ; RESTORE STACK
        RTI

; INIT ACIA OF I/O BOARD

ACI2INT LDD     #$0311     ; ACIA2 RESET CODE & CONFIG BYTE FOR 8N2 DIV 16
        STA     ACIA2SR    ; RESET ACIA2
        STB     ACIA2SR    ; CONFIGURE ACIA2
        LDA     CFOK       ; DISPLAY MESSAGE IF CF DETECTED
        BEQ     ENDIN
        CMPA    #02
        BNE     CF1
        LDX     #CF2MSG
        BRA     PRT
CF1     LDX     #CF1MSG
PRT     JSR     PSTRNG
ENDIN   RTS

;* USE SOME FREE PLACE AT END OF DISK DRIVER TO STORE MESSAGE
;* !!! WARNING MUST NOT EXCEED $DE7F !!!

        ORG     $DE2E

CF1MSG  FCC     'CF DETECTED - MAPPED TO DISK 2.'
        FCB     $04
CF2MSG  FCC     '2 CF DETECTED - MAPPED TO DISK 2 & 3.'
        FCB     $04

;* STORE ACIA 1 INIT ROUTINE ADDRESS IN FLEX KERNEL AT PLACE
;* WHERE FLEX JUMP TO INPUT DATE ROUTINE
        ORG     DATCALL+1
        FDB     ACI2INT

;* INHIBIT MEMORY TEST AT STARTUP
        ORG     $CA33
        JMP     $CA53

;* SET VERIFY OFF
        ORG    VRYFLG
        FCB    $00

;* SET TTYSET PARAMETERS
        ORG    TTYPRM
        FCB    $08,$18,$3A
        FCB    $18,$50,$18
        FCB    $00,$08,$00
        FCB    $59,$1B

;* SET ASN PARAMETERS
        ORG    ASNPRM
        FCB    $00,$01

;* SET MEMEND
        ORG    MEMEND
        FDB    $BFFF

        END    COLDS
